if (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
	target_compile_options(${PROJECT_NAME} PRIVATE -ffunction-sections -fdata-sections -fmerge-all-constants)
    target_link_options(${PROJECT_NAME} PRIVATE -Wl,--gc-sections -ffast-math -static -fno-stack-protector -Wl,--no-insert-timestamp)
	target_link_options(${PROJECT_NAME} PRIVATE -Wl,--exclude-all-symbols -Wl,--disable-runtime-pseudo-reloc -Wl,--large-address-aware)
	if (${PROJECT_NAME}_LLD)
		target_link_options(${PROJECT_NAME} PRIVATE -fuse-ld=lld)
	endif()
	if (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
        target_link_options(${PROJECT_NAME} PRIVATE -static-libgcc -static-libstdc++ -lstdc++exp)
		if (NOT ${PROJECT_NAME}_LLD)  # By default MinGW linker use random base address
			target_link_options(${PROJECT_NAME} PRIVATE -Wl,--dll)
		endif()
	else()
		target_compile_options(${PROJECT_NAME} PRIVATE -flto=thin)
		target_link_options(${PROJECT_NAME} PRIVATE -Wl,--thinlto-cache-dir=lto_cache)
		if (${PROJECT_NAME}_PDB)
			target_link_options(${PROJECT_NAME} PRIVATE -gcodeview -Wl,-pdb=${PROJECT_NAME}.pdb)
		endif()
	endif()
	if (${PROJECT_NAME}_MAP)
		target_link_options(${PROJECT_NAME} PRIVATE -Wl,-Map=${PROJECT_NAME}.map)
	endif()
elseif (MSVC)
    message(FATAL_ERROR "MSVC compiler has no support for C++23")
endif()
